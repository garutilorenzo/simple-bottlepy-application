import datetime
import rom

class Tags(rom.Model):
    id = rom.PrimaryKey(index=True)
    site = rom.String(index=True, keygen=rom.IDENTITY_CI)
    tag_id = rom.Integer(index=True)
    name = rom.String(index=True, keygen=rom.IDENTITY_CI)
    clean_name = rom.String()
    questions = rom.Integer()
    created_time = rom.Date()
    updated_time = rom.Date(default=datetime.datetime.now())

class Users(rom.Model):
    id = rom.PrimaryKey(index=True)
    site = rom.String(index=True, keygen=rom.IDENTITY_CI)
    user_id = rom.Integer(index=True)
    name = rom.String(index=True, keygen=rom.IDENTITY_CI)
    clean_name = rom.String()
    reputation = rom.Integer()
    website = rom.String()
    location = rom.String()
    about_me = rom.String()
    views = rom.Integer()
    up_votes = rom.Integer()
    down_votes = rom.Integer()
    account_id = rom.Integer()
    last_access_time = rom.Date()
    posts = rom.OneToMany("Posts", "owner")
    edited_posts = rom.OneToMany("Posts", "editor")
    history_events = rom.OneToMany("PostHistory", "user")
    created_time = rom.Date()
    updated_time = rom.Date(default=datetime.datetime.now())

class Posts(rom.Model):
    id = rom.PrimaryKey(index=True)
    site = rom.String(index=True, keygen=rom.IDENTITY_CI)
    title = rom.String(index=True, keygen=rom.FULL_TEXT)
    clean_title = rom.String()
    post_id = rom.Integer(index=True)
    parent_id = rom.Integer(index=True)
    post_type = rom.String(index=True, keygen=rom.IDENTITY_CI)
    score = rom.Integer()
    view_count = rom.Integer()
    body = rom.String(index=True, keygen=rom.FULL_TEXT)
    owner = rom.ManyToOne("Users", "no action")
    editor = rom.ManyToOne("Users", "no action")
    post_history = rom.OneToMany("PostHistory", "post")
    answer_count = rom.Integer()
    comment_count = rom.Integer()
    last_edited_date = rom.Date()
    last_activity_date = rom.Date()
    created_time = rom.Date()
    updated_time = rom.Date(default=datetime.datetime.now())

class PostsTags(rom.Model):
    site = rom.String(index=True, keygen=rom.IDENTITY_CI)
    tag_id = rom.Integer(index=True)
    tag_name = rom.String(index=True, keygen=rom.IDENTITY_CI)
    post_id = rom.Integer(index=True)

class PostHistory(rom.Model):
    id = rom.PrimaryKey(index=True)
    site = rom.String(index=True, keygen=rom.IDENTITY_CI)
    post_history_id = rom.Integer(index=True)
    post_id = rom.Integer(index=True)
    post  = rom.ManyToOne("Posts", "no action")
    user = rom.ManyToOne("Users", "no action")
    post_history_type = rom.String(index=True, keygen=rom.IDENTITY_CI)
    revision_guid = rom.String()
    text = rom.String(default= '', index=True, keygen=rom.FULL_TEXT)
    comment = rom.String(default='', index=True, keygen=rom.FULL_TEXT)
    created_time = rom.Date()
    updated_time = rom.Date(default=datetime.datetime.now())